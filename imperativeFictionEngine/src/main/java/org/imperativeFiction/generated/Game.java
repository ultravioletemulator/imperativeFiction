//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.07.29 at 08:29:19 AM CEST 
//


package org.imperativeFiction.generated;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{}definition"/&gt;
 *         &lt;element ref="{}artwork" minOccurs="0"/&gt;
 *         &lt;element ref="{}screenshots" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{}music" minOccurs="0"/&gt;
 *         &lt;element name="description" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="initialization" type="{}initialization"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="version" use="required" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="author" use="required" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="enterprise" use="required" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="licensing" use="required" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="year" use="required" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="language" use="required" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "definition",
    "artwork",
    "screenshots",
    "music",
    "description",
    "initialization"
})
@XmlRootElement(name = "game")
public class Game
    implements Equals, ToString
{

    @XmlElement(required = true)
    protected Definition definition;
    protected Artwork artwork;
    protected List<Screenshots> screenshots;
    protected Music music;
    protected String description;
    @XmlElement(required = true)
    protected Initialization initialization;
    @XmlAttribute(name = "name", required = true)
    protected String name;
    @XmlAttribute(name = "version", required = true)
    protected String version;
    @XmlAttribute(name = "author", required = true)
    protected String author;
    @XmlAttribute(name = "enterprise", required = true)
    protected String enterprise;
    @XmlAttribute(name = "licensing", required = true)
    protected String licensing;
    @XmlAttribute(name = "year", required = true)
    protected String year;
    @XmlAttribute(name = "language", required = true)
    protected String language;

    /**
     * Gets the value of the definition property.
     * 
     * @return
     *     possible object is
     *     {@link Definition }
     *     
     */
    public Definition getDefinition() {
        return definition;
    }

    /**
     * Sets the value of the definition property.
     * 
     * @param value
     *     allowed object is
     *     {@link Definition }
     *     
     */
    public void setDefinition(Definition value) {
        this.definition = value;
    }

    /**
     * Gets the value of the artwork property.
     * 
     * @return
     *     possible object is
     *     {@link Artwork }
     *     
     */
    public Artwork getArtwork() {
        return artwork;
    }

    /**
     * Sets the value of the artwork property.
     * 
     * @param value
     *     allowed object is
     *     {@link Artwork }
     *     
     */
    public void setArtwork(Artwork value) {
        this.artwork = value;
    }

    /**
     * Gets the value of the screenshots property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the screenshots property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getScreenshots().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Screenshots }
     * 
     * 
     */
    public List<Screenshots> getScreenshots() {
        if (screenshots == null) {
            screenshots = new ArrayList<Screenshots>();
        }
        return this.screenshots;
    }

    /**
     * Gets the value of the music property.
     * 
     * @return
     *     possible object is
     *     {@link Music }
     *     
     */
    public Music getMusic() {
        return music;
    }

    /**
     * Sets the value of the music property.
     * 
     * @param value
     *     allowed object is
     *     {@link Music }
     *     
     */
    public void setMusic(Music value) {
        this.music = value;
    }

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Gets the value of the initialization property.
     * 
     * @return
     *     possible object is
     *     {@link Initialization }
     *     
     */
    public Initialization getInitialization() {
        return initialization;
    }

    /**
     * Sets the value of the initialization property.
     * 
     * @param value
     *     allowed object is
     *     {@link Initialization }
     *     
     */
    public void setInitialization(Initialization value) {
        this.initialization = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the version property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVersion() {
        return version;
    }

    /**
     * Sets the value of the version property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVersion(String value) {
        this.version = value;
    }

    /**
     * Gets the value of the author property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAuthor() {
        return author;
    }

    /**
     * Sets the value of the author property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAuthor(String value) {
        this.author = value;
    }

    /**
     * Gets the value of the enterprise property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEnterprise() {
        return enterprise;
    }

    /**
     * Sets the value of the enterprise property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEnterprise(String value) {
        this.enterprise = value;
    }

    /**
     * Gets the value of the licensing property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLicensing() {
        return licensing;
    }

    /**
     * Sets the value of the licensing property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLicensing(String value) {
        this.licensing = value;
    }

    /**
     * Gets the value of the year property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getYear() {
        return year;
    }

    /**
     * Sets the value of the year property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setYear(String value) {
        this.year = value;
    }

    /**
     * Gets the value of the language property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLanguage() {
        return language;
    }

    /**
     * Sets the value of the language property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLanguage(String value) {
        this.language = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            Definition theDefinition;
            theDefinition = this.getDefinition();
            strategy.appendField(locator, this, "definition", buffer, theDefinition);
        }
        {
            Artwork theArtwork;
            theArtwork = this.getArtwork();
            strategy.appendField(locator, this, "artwork", buffer, theArtwork);
        }
        {
            List<Screenshots> theScreenshots;
            theScreenshots = (((this.screenshots!= null)&&(!this.screenshots.isEmpty()))?this.getScreenshots():null);
            strategy.appendField(locator, this, "screenshots", buffer, theScreenshots);
        }
        {
            Music theMusic;
            theMusic = this.getMusic();
            strategy.appendField(locator, this, "music", buffer, theMusic);
        }
        {
            String theDescription;
            theDescription = this.getDescription();
            strategy.appendField(locator, this, "description", buffer, theDescription);
        }
        {
            Initialization theInitialization;
            theInitialization = this.getInitialization();
            strategy.appendField(locator, this, "initialization", buffer, theInitialization);
        }
        {
            String theName;
            theName = this.getName();
            strategy.appendField(locator, this, "name", buffer, theName);
        }
        {
            String theVersion;
            theVersion = this.getVersion();
            strategy.appendField(locator, this, "version", buffer, theVersion);
        }
        {
            String theAuthor;
            theAuthor = this.getAuthor();
            strategy.appendField(locator, this, "author", buffer, theAuthor);
        }
        {
            String theEnterprise;
            theEnterprise = this.getEnterprise();
            strategy.appendField(locator, this, "enterprise", buffer, theEnterprise);
        }
        {
            String theLicensing;
            theLicensing = this.getLicensing();
            strategy.appendField(locator, this, "licensing", buffer, theLicensing);
        }
        {
            String theYear;
            theYear = this.getYear();
            strategy.appendField(locator, this, "year", buffer, theYear);
        }
        {
            String theLanguage;
            theLanguage = this.getLanguage();
            strategy.appendField(locator, this, "language", buffer, theLanguage);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Game)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Game that = ((Game) object);
        {
            Definition lhsDefinition;
            lhsDefinition = this.getDefinition();
            Definition rhsDefinition;
            rhsDefinition = that.getDefinition();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "definition", lhsDefinition), LocatorUtils.property(thatLocator, "definition", rhsDefinition), lhsDefinition, rhsDefinition)) {
                return false;
            }
        }
        {
            Artwork lhsArtwork;
            lhsArtwork = this.getArtwork();
            Artwork rhsArtwork;
            rhsArtwork = that.getArtwork();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "artwork", lhsArtwork), LocatorUtils.property(thatLocator, "artwork", rhsArtwork), lhsArtwork, rhsArtwork)) {
                return false;
            }
        }
        {
            List<Screenshots> lhsScreenshots;
            lhsScreenshots = (((this.screenshots!= null)&&(!this.screenshots.isEmpty()))?this.getScreenshots():null);
            List<Screenshots> rhsScreenshots;
            rhsScreenshots = (((that.screenshots!= null)&&(!that.screenshots.isEmpty()))?that.getScreenshots():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "screenshots", lhsScreenshots), LocatorUtils.property(thatLocator, "screenshots", rhsScreenshots), lhsScreenshots, rhsScreenshots)) {
                return false;
            }
        }
        {
            Music lhsMusic;
            lhsMusic = this.getMusic();
            Music rhsMusic;
            rhsMusic = that.getMusic();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "music", lhsMusic), LocatorUtils.property(thatLocator, "music", rhsMusic), lhsMusic, rhsMusic)) {
                return false;
            }
        }
        {
            String lhsDescription;
            lhsDescription = this.getDescription();
            String rhsDescription;
            rhsDescription = that.getDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "description", lhsDescription), LocatorUtils.property(thatLocator, "description", rhsDescription), lhsDescription, rhsDescription)) {
                return false;
            }
        }
        {
            Initialization lhsInitialization;
            lhsInitialization = this.getInitialization();
            Initialization rhsInitialization;
            rhsInitialization = that.getInitialization();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "initialization", lhsInitialization), LocatorUtils.property(thatLocator, "initialization", rhsInitialization), lhsInitialization, rhsInitialization)) {
                return false;
            }
        }
        {
            String lhsName;
            lhsName = this.getName();
            String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            String lhsVersion;
            lhsVersion = this.getVersion();
            String rhsVersion;
            rhsVersion = that.getVersion();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "version", lhsVersion), LocatorUtils.property(thatLocator, "version", rhsVersion), lhsVersion, rhsVersion)) {
                return false;
            }
        }
        {
            String lhsAuthor;
            lhsAuthor = this.getAuthor();
            String rhsAuthor;
            rhsAuthor = that.getAuthor();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "author", lhsAuthor), LocatorUtils.property(thatLocator, "author", rhsAuthor), lhsAuthor, rhsAuthor)) {
                return false;
            }
        }
        {
            String lhsEnterprise;
            lhsEnterprise = this.getEnterprise();
            String rhsEnterprise;
            rhsEnterprise = that.getEnterprise();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enterprise", lhsEnterprise), LocatorUtils.property(thatLocator, "enterprise", rhsEnterprise), lhsEnterprise, rhsEnterprise)) {
                return false;
            }
        }
        {
            String lhsLicensing;
            lhsLicensing = this.getLicensing();
            String rhsLicensing;
            rhsLicensing = that.getLicensing();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "licensing", lhsLicensing), LocatorUtils.property(thatLocator, "licensing", rhsLicensing), lhsLicensing, rhsLicensing)) {
                return false;
            }
        }
        {
            String lhsYear;
            lhsYear = this.getYear();
            String rhsYear;
            rhsYear = that.getYear();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "year", lhsYear), LocatorUtils.property(thatLocator, "year", rhsYear), lhsYear, rhsYear)) {
                return false;
            }
        }
        {
            String lhsLanguage;
            lhsLanguage = this.getLanguage();
            String rhsLanguage;
            rhsLanguage = that.getLanguage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "language", lhsLanguage), LocatorUtils.property(thatLocator, "language", rhsLanguage), lhsLanguage, rhsLanguage)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public void setScreenshots(List<Screenshots> value) {
        this.screenshots = null;
        List<Screenshots> draftl = this.getScreenshots();
        draftl.addAll(value);
    }

}

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.07.24 at 08:03:13 PM CEST 
//


package org.imperativeFiction.generated;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for precondition complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="precondition"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;sequence&gt;
 *           &lt;element name="andCondition" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/&gt;
 *           &lt;element name="orCondition" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;/sequence&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "precondition", propOrder = {
    "andCondition",
    "orCondition"
})
public class Precondition
    implements Equals, ToString
{

    protected List<String> andCondition;
    protected List<String> orCondition;
    @XmlAttribute(name = "name", required = true)
    protected String name;

    /**
     * Gets the value of the andCondition property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the andCondition property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAndCondition().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getAndCondition() {
        if (andCondition == null) {
            andCondition = new ArrayList<String>();
        }
        return this.andCondition;
    }

    /**
     * Gets the value of the orCondition property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the orCondition property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOrCondition().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getOrCondition() {
        if (orCondition == null) {
            orCondition = new ArrayList<String>();
        }
        return this.orCondition;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<String> theAndCondition;
            theAndCondition = (((this.andCondition!= null)&&(!this.andCondition.isEmpty()))?this.getAndCondition():null);
            strategy.appendField(locator, this, "andCondition", buffer, theAndCondition);
        }
        {
            List<String> theOrCondition;
            theOrCondition = (((this.orCondition!= null)&&(!this.orCondition.isEmpty()))?this.getOrCondition():null);
            strategy.appendField(locator, this, "orCondition", buffer, theOrCondition);
        }
        {
            String theName;
            theName = this.getName();
            strategy.appendField(locator, this, "name", buffer, theName);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Precondition)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Precondition that = ((Precondition) object);
        {
            List<String> lhsAndCondition;
            lhsAndCondition = (((this.andCondition!= null)&&(!this.andCondition.isEmpty()))?this.getAndCondition():null);
            List<String> rhsAndCondition;
            rhsAndCondition = (((that.andCondition!= null)&&(!that.andCondition.isEmpty()))?that.getAndCondition():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "andCondition", lhsAndCondition), LocatorUtils.property(thatLocator, "andCondition", rhsAndCondition), lhsAndCondition, rhsAndCondition)) {
                return false;
            }
        }
        {
            List<String> lhsOrCondition;
            lhsOrCondition = (((this.orCondition!= null)&&(!this.orCondition.isEmpty()))?this.getOrCondition():null);
            List<String> rhsOrCondition;
            rhsOrCondition = (((that.orCondition!= null)&&(!that.orCondition.isEmpty()))?that.getOrCondition():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "orCondition", lhsOrCondition), LocatorUtils.property(thatLocator, "orCondition", rhsOrCondition), lhsOrCondition, rhsOrCondition)) {
                return false;
            }
        }
        {
            String lhsName;
            lhsName = this.getName();
            String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public void setAndCondition(List<String> value) {
        this.andCondition = null;
        List<String> draftl = this.getAndCondition();
        draftl.addAll(value);
    }

    public void setOrCondition(List<String> value) {
        this.orCondition = null;
        List<String> draftl = this.getOrCondition();
        draftl.addAll(value);
    }

}

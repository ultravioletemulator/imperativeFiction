//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.07.29 at 09:37:50 AM CEST 
//


package org.imperativeFiction.generated;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.imperativeFiction.generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Object_QNAME = new QName("", "object");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.imperativeFiction.generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link GameMessages }
     * 
     */
    public GameMessages createGameMessages() {
        return new GameMessages();
    }

    /**
     * Create an instance of {@link Word }
     * 
     */
    public Word createWord() {
        return new Word();
    }

    /**
     * Create an instance of {@link File }
     * 
     */
    public File createFile() {
        return new File();
    }

    /**
     * Create an instance of {@link Image }
     * 
     */
    public Image createImage() {
        return new Image();
    }

    /**
     * Create an instance of {@link Music }
     * 
     */
    public Music createMusic() {
        return new Music();
    }

    /**
     * Create an instance of {@link Synonyms }
     * 
     */
    public Synonyms createSynonyms() {
        return new Synonyms();
    }

    /**
     * Create an instance of {@link ObjectType }
     * 
     */
    public ObjectType createObjectType() {
        return new ObjectType();
    }

    /**
     * Create an instance of {@link GameObjects }
     * 
     */
    public GameObjects createGameObjects() {
        return new GameObjects();
    }

    /**
     * Create an instance of {@link GameObjectCombinations }
     * 
     */
    public GameObjectCombinations createGameObjectCombinations() {
        return new GameObjectCombinations();
    }

    /**
     * Create an instance of {@link ObjectCombination }
     * 
     */
    public ObjectCombination createObjectCombination() {
        return new ObjectCombination();
    }

    /**
     * Create an instance of {@link GameObjectPlacements }
     * 
     */
    public GameObjectPlacements createGameObjectPlacements() {
        return new GameObjectPlacements();
    }

    /**
     * Create an instance of {@link ObjectPlacement }
     * 
     */
    public ObjectPlacement createObjectPlacement() {
        return new ObjectPlacement();
    }

    /**
     * Create an instance of {@link Goal }
     * 
     */
    public Goal createGoal() {
        return new Goal();
    }

    /**
     * Create an instance of {@link Action }
     * 
     */
    public Action createAction() {
        return new Action();
    }

    /**
     * Create an instance of {@link ActionResponse }
     * 
     */
    public ActionResponse createActionResponse() {
        return new ActionResponse();
    }

    /**
     * Create an instance of {@link Locations }
     * 
     */
    public Locations createLocations() {
        return new Locations();
    }

    /**
     * Create an instance of {@link Location }
     * 
     */
    public Location createLocation() {
        return new Location();
    }

    /**
     * Create an instance of {@link SupportedActions }
     * 
     */
    public SupportedActions createSupportedActions() {
        return new SupportedActions();
    }

    /**
     * Create an instance of {@link GenericActions }
     * 
     */
    public GenericActions createGenericActions() {
        return new GenericActions();
    }

    /**
     * Create an instance of {@link Boundaries }
     * 
     */
    public Boundaries createBoundaries() {
        return new Boundaries();
    }

    /**
     * Create an instance of {@link Boundary }
     * 
     */
    public Boundary createBoundary() {
        return new Boundary();
    }

    /**
     * Create an instance of {@link Doors }
     * 
     */
    public Doors createDoors() {
        return new Doors();
    }

    /**
     * Create an instance of {@link Door }
     * 
     */
    public Door createDoor() {
        return new Door();
    }

    /**
     * Create an instance of {@link AutomatedAction }
     * 
     */
    public AutomatedAction createAutomatedAction() {
        return new AutomatedAction();
    }

    /**
     * Create an instance of {@link Precondition }
     * 
     */
    public Precondition createPrecondition() {
        return new Precondition();
    }

    /**
     * Create an instance of {@link AutomatedActions }
     * 
     */
    public AutomatedActions createAutomatedActions() {
        return new AutomatedActions();
    }

    /**
     * Create an instance of {@link GameGoals }
     * 
     */
    public GameGoals createGameGoals() {
        return new GameGoals();
    }

    /**
     * Create an instance of {@link Artwork }
     * 
     */
    public Artwork createArtwork() {
        return new Artwork();
    }

    /**
     * Create an instance of {@link Screenshots }
     * 
     */
    public Screenshots createScreenshots() {
        return new Screenshots();
    }

    /**
     * Create an instance of {@link Definition }
     * 
     */
    public Definition createDefinition() {
        return new Definition();
    }

    /**
     * Create an instance of {@link GameWeapons }
     * 
     */
    public GameWeapons createGameWeapons() {
        return new GameWeapons();
    }

    /**
     * Create an instance of {@link GameAutomaticActions }
     * 
     */
    public GameAutomaticActions createGameAutomaticActions() {
        return new GameAutomaticActions();
    }

    /**
     * Create an instance of {@link Game }
     * 
     */
    public Game createGame() {
        return new Game();
    }

    /**
     * Create an instance of {@link Initialization }
     * 
     */
    public Initialization createInitialization() {
        return new Initialization();
    }

    /**
     * Create an instance of {@link GameState }
     * 
     */
    public GameState createGameState() {
        return new GameState();
    }

    /**
     * Create an instance of {@link Inventory }
     * 
     */
    public Inventory createInventory() {
        return new Inventory();
    }

    /**
     * Create an instance of {@link CharacterState }
     * 
     */
    public CharacterState createCharacterState() {
        return new CharacterState();
    }

    /**
     * Create an instance of {@link GainedGoals }
     * 
     */
    public GainedGoals createGainedGoals() {
        return new GainedGoals();
    }

    /**
     * Create an instance of {@link Placement }
     * 
     */
    public Placement createPlacement() {
        return new Placement();
    }

    /**
     * Create an instance of {@link Food }
     * 
     */
    public Food createFood() {
        return new Food();
    }

    /**
     * Create an instance of {@link Path }
     * 
     */
    public Path createPath() {
        return new Path();
    }

    /**
     * Create an instance of {@link DoorLocationPlacement }
     * 
     */
    public DoorLocationPlacement createDoorLocationPlacement() {
        return new DoorLocationPlacement();
    }

    /**
     * Create an instance of {@link Wall }
     * 
     */
    public Wall createWall() {
        return new Wall();
    }

    /**
     * Create an instance of {@link EmptyBoundary }
     * 
     */
    public EmptyBoundary createEmptyBoundary() {
        return new EmptyBoundary();
    }

    /**
     * Create an instance of {@link ArmourType }
     * 
     */
    public ArmourType createArmourType() {
        return new ArmourType();
    }

    /**
     * Create an instance of {@link WeaponType }
     * 
     */
    public WeaponType createWeaponType() {
        return new WeaponType();
    }

    /**
     * Create an instance of {@link PersonStatus }
     * 
     */
    public PersonStatus createPersonStatus() {
        return new PersonStatus();
    }

    /**
     * Create an instance of {@link PersonStatuses }
     * 
     */
    public PersonStatuses createPersonStatuses() {
        return new PersonStatuses();
    }

    /**
     * Create an instance of {@link Hunger }
     * 
     */
    public Hunger createHunger() {
        return new Hunger();
    }

    /**
     * Create an instance of {@link Person }
     * 
     */
    public Person createPerson() {
        return new Person();
    }

    /**
     * Create an instance of {@link TimeBasedAction }
     * 
     */
    public TimeBasedAction createTimeBasedAction() {
        return new TimeBasedAction();
    }

    /**
     * Create an instance of {@link AutomaticAction }
     * 
     */
    public AutomaticAction createAutomaticAction() {
        return new AutomaticAction();
    }

    /**
     * Create an instance of {@link Execution }
     * 
     */
    public Execution createExecution() {
        return new Execution();
    }

    /**
     * Create an instance of {@link Character }
     * 
     */
    public Character createCharacter() {
        return new Character();
    }

    /**
     * Create an instance of {@link GameMessages.Message }
     * 
     */
    public GameMessages.Message createGameMessagesMessage() {
        return new GameMessages.Message();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ObjectType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "object")
    public JAXBElement<ObjectType> createObject(ObjectType value) {
        return new JAXBElement<ObjectType>(_Object_QNAME, ObjectType.class, null, value);
    }

}
